ARM GAS  /tmp/ccTY5xJa.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/uart.c"
  20              		.section	.text.Delay_ms,"ax",%progbits
  21              		.align	1
  22              		.global	Delay_ms
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	Delay_ms:
  28              	.LVL0:
  29              	.LFB134:
   1:Core/Src/uart.c **** #include "uart.h"
   2:Core/Src/uart.c **** 
   3:Core/Src/uart.c **** /*
   4:Core/Src/uart.c **** Delay_ms():
   5:Core/Src/uart.c ****     Delay in milliseconds
   6:Core/Src/uart.c **** */
   7:Core/Src/uart.c **** void Delay_ms(int delay){
  30              		.loc 1 7 25 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 7 25 is_stmt 0 view .LVU1
  36 0000 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 8
   8:Core/Src/uart.c ****     for (volatile int i = 0; i < delay; i++) {}
  38              		.loc 1 8 5 is_stmt 1 view .LVU2
  39              	.LBB2:
  40              		.loc 1 8 10 view .LVU3
  41              		.loc 1 8 23 is_stmt 0 view .LVU4
  42 0002 0023     		movs	r3, #0
  43 0004 0193     		str	r3, [sp, #4]
  44              		.loc 1 8 5 view .LVU5
  45 0006 02E0     		b	.L2
  46              	.L3:
  47              		.loc 1 8 47 is_stmt 1 discriminator 3 view .LVU6
  48              		.loc 1 8 42 discriminator 3 view .LVU7
  49 0008 019B     		ldr	r3, [sp, #4]
  50 000a 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccTY5xJa.s 			page 2


  51 000c 0193     		str	r3, [sp, #4]
  52              	.L2:
  53              		.loc 1 8 32 discriminator 1 view .LVU8
  54 000e 019B     		ldr	r3, [sp, #4]
  55 0010 8342     		cmp	r3, r0
  56 0012 F9DB     		blt	.L3
  57              	.LBE2:
   9:Core/Src/uart.c **** }
  58              		.loc 1 9 1 is_stmt 0 view .LVU9
  59 0014 02B0     		add	sp, sp, #8
  60              		.cfi_def_cfa_offset 0
  61              		@ sp needed
  62 0016 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE134:
  66              		.section	.text.Clock_Init,"ax",%progbits
  67              		.align	1
  68              		.global	Clock_Init
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	Clock_Init:
  74              	.LFB135:
  10:Core/Src/uart.c **** 
  11:Core/Src/uart.c **** /* 
  12:Core/Src/uart.c **** Clock_Init():
  13:Core/Src/uart.c ****     Initializes GPIOA and USART1 Clock
  14:Core/Src/uart.c **** */
  15:Core/Src/uart.c **** void Clock_Init(){
  75              		.loc 1 15 18 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  16:Core/Src/uart.c ****     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
  80              		.loc 1 16 5 view .LVU11
  81              		.loc 1 16 8 is_stmt 0 view .LVU12
  82 0000 044B     		ldr	r3, .L6
  83 0002 1A6B     		ldr	r2, [r3, #48]
  84              		.loc 1 16 18 view .LVU13
  85 0004 42F00102 		orr	r2, r2, #1
  86 0008 1A63     		str	r2, [r3, #48]
  17:Core/Src/uart.c ****     RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
  87              		.loc 1 17 5 is_stmt 1 view .LVU14
  88              		.loc 1 17 8 is_stmt 0 view .LVU15
  89 000a 5A6C     		ldr	r2, [r3, #68]
  90              		.loc 1 17 18 view .LVU16
  91 000c 42F01002 		orr	r2, r2, #16
  92 0010 5A64     		str	r2, [r3, #68]
  18:Core/Src/uart.c **** }
  93              		.loc 1 18 1 view .LVU17
  94 0012 7047     		bx	lr
  95              	.L7:
  96              		.align	2
  97              	.L6:
  98 0014 00380240 		.word	1073887232
  99              		.cfi_endproc
ARM GAS  /tmp/ccTY5xJa.s 			page 3


 100              	.LFE135:
 102              		.section	.text.GPIO_Init,"ax",%progbits
 103              		.align	1
 104              		.global	GPIO_Init
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	GPIO_Init:
 110              	.LFB136:
  19:Core/Src/uart.c **** 
  20:Core/Src/uart.c **** /*
  21:Core/Src/uart.c **** GPIO_Init():
  22:Core/Src/uart.c ****     Initialize GPIOA port and PINS 9, 10 & 5
  23:Core/Src/uart.c **** */
  24:Core/Src/uart.c **** void GPIO_Init(){
 111              		.loc 1 24 17 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
  25:Core/Src/uart.c ****     // Step 1. Initalize I/O Pins as alternate mode : PA9 - USART1_TX & PA10 - USART1_RX
  26:Core/Src/uart.c ****     GPIOA->MODER |= (2 << 18); // alternate function for PA9
 116              		.loc 1 26 5 view .LVU19
 117              		.loc 1 26 10 is_stmt 0 view .LVU20
 118 0000 164B     		ldr	r3, .L9
 119 0002 1A68     		ldr	r2, [r3]
 120              		.loc 1 26 18 view .LVU21
 121 0004 42F40022 		orr	r2, r2, #524288
 122 0008 1A60     		str	r2, [r3]
  27:Core/Src/uart.c ****     GPIOA->MODER |= (2 << 20); // alternate function for PA10
 123              		.loc 1 27 5 is_stmt 1 view .LVU22
 124              		.loc 1 27 10 is_stmt 0 view .LVU23
 125 000a 1A68     		ldr	r2, [r3]
 126              		.loc 1 27 18 view .LVU24
 127 000c 42F40012 		orr	r2, r2, #2097152
 128 0010 1A60     		str	r2, [r3]
  28:Core/Src/uart.c **** 
  29:Core/Src/uart.c ****     GPIOA->OSPEEDR |= ((3 << 18) | (3 << 20)); // High Speed for PA9 & PA10
 129              		.loc 1 29 5 is_stmt 1 view .LVU25
 130              		.loc 1 29 10 is_stmt 0 view .LVU26
 131 0012 9A68     		ldr	r2, [r3, #8]
 132              		.loc 1 29 20 view .LVU27
 133 0014 42F47012 		orr	r2, r2, #3932160
 134 0018 9A60     		str	r2, [r3, #8]
  30:Core/Src/uart.c **** 
  31:Core/Src/uart.c ****     // Step 2. Set alternate functions for PA9 & PA10 : 0111 <- USART
  32:Core/Src/uart.c ****     GPIOA->AFR[1] |= (7 << 4); // PA9  -> AF7 (USART_TX)
 135              		.loc 1 32 5 is_stmt 1 view .LVU28
 136              		.loc 1 32 15 is_stmt 0 view .LVU29
 137 001a 5A6A     		ldr	r2, [r3, #36]
 138              		.loc 1 32 19 view .LVU30
 139 001c 42F07002 		orr	r2, r2, #112
 140 0020 5A62     		str	r2, [r3, #36]
  33:Core/Src/uart.c ****     GPIOA->AFR[1] |= (7 << 8); // PA10 -> AF7 (USART_RX)
 141              		.loc 1 33 5 is_stmt 1 view .LVU31
 142              		.loc 1 33 15 is_stmt 0 view .LVU32
 143 0022 5A6A     		ldr	r2, [r3, #36]
ARM GAS  /tmp/ccTY5xJa.s 			page 4


 144              		.loc 1 33 19 view .LVU33
 145 0024 42F4E062 		orr	r2, r2, #1792
 146 0028 5A62     		str	r2, [r3, #36]
  34:Core/Src/uart.c **** 
  35:Core/Src/uart.c ****     // PIN 5 SETUP
  36:Core/Src/uart.c ****     GPIOA->MODER |= (1 << (GPIOA_PIN5 * 2)); // Output Mode for Pin5 : (1 @ bit 2y)
 147              		.loc 1 36 5 is_stmt 1 view .LVU34
 148              		.loc 1 36 10 is_stmt 0 view .LVU35
 149 002a 1A68     		ldr	r2, [r3]
 150              		.loc 1 36 18 view .LVU36
 151 002c 42F48062 		orr	r2, r2, #1024
 152 0030 1A60     		str	r2, [r3]
  37:Core/Src/uart.c ****     GPIOA->MODER &= ~(1 << (2 * GPIOA_PIN5 + 1)); // Output Mode for Pin5 : (0 @ bit 2y+1)
 153              		.loc 1 37 5 is_stmt 1 view .LVU37
 154              		.loc 1 37 10 is_stmt 0 view .LVU38
 155 0032 1A68     		ldr	r2, [r3]
 156              		.loc 1 37 18 view .LVU39
 157 0034 22F40062 		bic	r2, r2, #2048
 158 0038 1A60     		str	r2, [r3]
  38:Core/Src/uart.c **** 
  39:Core/Src/uart.c ****     GPIOA->OTYPER &= ~(1 << GPIOA_PIN5); // Output Push-pull : (0 @ bit 5)
 159              		.loc 1 39 5 is_stmt 1 view .LVU40
 160              		.loc 1 39 10 is_stmt 0 view .LVU41
 161 003a 5A68     		ldr	r2, [r3, #4]
 162              		.loc 1 39 19 view .LVU42
 163 003c 22F02002 		bic	r2, r2, #32
 164 0040 5A60     		str	r2, [r3, #4]
  40:Core/Src/uart.c **** 
  41:Core/Src/uart.c ****     GPIOA->OSPEEDR |= (1 << (2 * GPIOA_PIN5 + 1)); // Fast Speed : (1 @ bit 2y+1)
 165              		.loc 1 41 5 is_stmt 1 view .LVU43
 166              		.loc 1 41 10 is_stmt 0 view .LVU44
 167 0042 9A68     		ldr	r2, [r3, #8]
 168              		.loc 1 41 20 view .LVU45
 169 0044 42F40062 		orr	r2, r2, #2048
 170 0048 9A60     		str	r2, [r3, #8]
  42:Core/Src/uart.c ****     GPIOA->OSPEEDR &= ~(1 << (2 * GPIOA_PIN5)); // Fast Speed : (0 @ bit 2y)
 171              		.loc 1 42 5 is_stmt 1 view .LVU46
 172              		.loc 1 42 10 is_stmt 0 view .LVU47
 173 004a 9A68     		ldr	r2, [r3, #8]
 174              		.loc 1 42 20 view .LVU48
 175 004c 22F48062 		bic	r2, r2, #1024
 176 0050 9A60     		str	r2, [r3, #8]
  43:Core/Src/uart.c **** 
  44:Core/Src/uart.c ****     GPIOA->PUPDR &= ~((1 << (2 * GPIOA_PIN5)) | (1 << (2 * GPIOA_PIN5 + 1))); // No Pull-up/down re
 177              		.loc 1 44 5 is_stmt 1 view .LVU49
 178              		.loc 1 44 10 is_stmt 0 view .LVU50
 179 0052 DA68     		ldr	r2, [r3, #12]
 180              		.loc 1 44 18 view .LVU51
 181 0054 22F44062 		bic	r2, r2, #3072
 182 0058 DA60     		str	r2, [r3, #12]
  45:Core/Src/uart.c **** }
 183              		.loc 1 45 1 view .LVU52
 184 005a 7047     		bx	lr
 185              	.L10:
 186              		.align	2
 187              	.L9:
 188 005c 00000240 		.word	1073872896
ARM GAS  /tmp/ccTY5xJa.s 			page 5


 189              		.cfi_endproc
 190              	.LFE136:
 192              		.section	.text.GPIO_Set_Pin,"ax",%progbits
 193              		.align	1
 194              		.global	GPIO_Set_Pin
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	GPIO_Set_Pin:
 200              	.LFB137:
  46:Core/Src/uart.c **** 
  47:Core/Src/uart.c **** void GPIO_Set_Pin(){
 201              		.loc 1 47 20 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
  48:Core/Src/uart.c ****     GPIOA->BSRR = (1 << GPIOA_PIN5); // Set Pin PA5 High
 206              		.loc 1 48 5 view .LVU54
 207              		.loc 1 48 17 is_stmt 0 view .LVU55
 208 0000 014B     		ldr	r3, .L12
 209 0002 2022     		movs	r2, #32
 210 0004 9A61     		str	r2, [r3, #24]
  49:Core/Src/uart.c **** }
 211              		.loc 1 49 1 view .LVU56
 212 0006 7047     		bx	lr
 213              	.L13:
 214              		.align	2
 215              	.L12:
 216 0008 00000240 		.word	1073872896
 217              		.cfi_endproc
 218              	.LFE137:
 220              		.section	.text.GPIO_Reset_Pin,"ax",%progbits
 221              		.align	1
 222              		.global	GPIO_Reset_Pin
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	GPIO_Reset_Pin:
 228              	.LFB138:
  50:Core/Src/uart.c **** 
  51:Core/Src/uart.c **** void GPIO_Reset_Pin(){
 229              		.loc 1 51 22 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
  52:Core/Src/uart.c ****     GPIOA->BSRR = (1 << 21); // Reset Pin PA5 Low
 234              		.loc 1 52 5 view .LVU58
 235              		.loc 1 52 17 is_stmt 0 view .LVU59
 236 0000 024B     		ldr	r3, .L15
 237 0002 4FF40012 		mov	r2, #2097152
 238 0006 9A61     		str	r2, [r3, #24]
  53:Core/Src/uart.c **** }
 239              		.loc 1 53 1 view .LVU60
 240 0008 7047     		bx	lr
 241              	.L16:
ARM GAS  /tmp/ccTY5xJa.s 			page 6


 242 000a 00BF     		.align	2
 243              	.L15:
 244 000c 00000240 		.word	1073872896
 245              		.cfi_endproc
 246              	.LFE138:
 248              		.section	.text.USART_Init,"ax",%progbits
 249              		.align	1
 250              		.global	USART_Init
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	USART_Init:
 256              	.LFB139:
  54:Core/Src/uart.c **** 
  55:Core/Src/uart.c **** /*
  56:Core/Src/uart.c **** UART_Init():
  57:Core/Src/uart.c ****     Initialize USART1
  58:Core/Src/uart.c **** */
  59:Core/Src/uart.c **** void USART_Init(){
 257              		.loc 1 59 18 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
  60:Core/Src/uart.c ****     // Step 3. Initialize USART
  61:Core/Src/uart.c ****     USART1->CR1 |= (1 << 13);  // USART Enable
 262              		.loc 1 61 5 view .LVU62
 263              		.loc 1 61 11 is_stmt 0 view .LVU63
 264 0000 0C4B     		ldr	r3, .L18
 265 0002 DA68     		ldr	r2, [r3, #12]
 266              		.loc 1 61 17 view .LVU64
 267 0004 42F40052 		orr	r2, r2, #8192
 268 0008 DA60     		str	r2, [r3, #12]
  62:Core/Src/uart.c ****     USART1->CR1 &= ~(1 << 12); // 0: 1 Start bit, 8 Data bits, n Stop bit
 269              		.loc 1 62 5 is_stmt 1 view .LVU65
 270              		.loc 1 62 11 is_stmt 0 view .LVU66
 271 000a DA68     		ldr	r2, [r3, #12]
 272              		.loc 1 62 17 view .LVU67
 273 000c 22F48052 		bic	r2, r2, #4096
 274 0010 DA60     		str	r2, [r3, #12]
  63:Core/Src/uart.c ****     USART1->CR2 &= ~(3 << 12); // 1 stop bit
 275              		.loc 1 63 5 is_stmt 1 view .LVU68
 276              		.loc 1 63 11 is_stmt 0 view .LVU69
 277 0012 1A69     		ldr	r2, [r3, #16]
 278              		.loc 1 63 17 view .LVU70
 279 0014 22F44052 		bic	r2, r2, #12288
 280 0018 1A61     		str	r2, [r3, #16]
  64:Core/Src/uart.c ****     USART1->BRR = 782;         // Baud Rate of 115200, PCLK2 @ 90MHz max
 281              		.loc 1 64 5 is_stmt 1 view .LVU71
 282              		.loc 1 64 17 is_stmt 0 view .LVU72
 283 001a 40F20E32 		movw	r2, #782
 284 001e 9A60     		str	r2, [r3, #8]
  65:Core/Src/uart.c **** 
  66:Core/Src/uart.c ****     USART1->CR1 |= (1 << 3); // Transmitter Enabled
 285              		.loc 1 66 5 is_stmt 1 view .LVU73
 286              		.loc 1 66 11 is_stmt 0 view .LVU74
 287 0020 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/ccTY5xJa.s 			page 7


 288              		.loc 1 66 17 view .LVU75
 289 0022 42F00802 		orr	r2, r2, #8
 290 0026 DA60     		str	r2, [r3, #12]
  67:Core/Src/uart.c ****     USART1->CR1 |= (1 << 2); // Receiver Enabled
 291              		.loc 1 67 5 is_stmt 1 view .LVU76
 292              		.loc 1 67 11 is_stmt 0 view .LVU77
 293 0028 DA68     		ldr	r2, [r3, #12]
 294              		.loc 1 67 17 view .LVU78
 295 002a 42F00402 		orr	r2, r2, #4
 296 002e DA60     		str	r2, [r3, #12]
  68:Core/Src/uart.c **** 
  69:Core/Src/uart.c **** }
 297              		.loc 1 69 1 view .LVU79
 298 0030 7047     		bx	lr
 299              	.L19:
 300 0032 00BF     		.align	2
 301              	.L18:
 302 0034 00100140 		.word	1073811456
 303              		.cfi_endproc
 304              	.LFE139:
 306              		.section	.text.USART1_SendChar,"ax",%progbits
 307              		.align	1
 308              		.global	USART1_SendChar
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	USART1_SendChar:
 314              	.LFB140:
  70:Core/Src/uart.c **** 
  71:Core/Src/uart.c **** /*
  72:Core/Src/uart.c **** USART1_SendChar():
  73:Core/Src/uart.c ****     Transmits character over UART
  74:Core/Src/uart.c **** */
  75:Core/Src/uart.c **** void USART1_SendChar(uint8_t c){
 315              		.loc 1 75 32 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LVL1:
 321              	.L21:
  76:Core/Src/uart.c ****     while(!(USART1->SR & (1 << 7))); // Wait for Transmit Data Register to be empty
 322              		.loc 1 76 11 discriminator 1 view .LVU81
 323              		.loc 1 76 19 is_stmt 0 discriminator 1 view .LVU82
 324 0000 064B     		ldr	r3, .L23
 325 0002 1B68     		ldr	r3, [r3]
 326              		.loc 1 76 11 discriminator 1 view .LVU83
 327 0004 13F0800F 		tst	r3, #128
 328 0008 FAD0     		beq	.L21
  77:Core/Src/uart.c ****     USART1->DR = c;
 329              		.loc 1 77 5 is_stmt 1 view .LVU84
 330              		.loc 1 77 16 is_stmt 0 view .LVU85
 331 000a 044B     		ldr	r3, .L23
 332 000c 5860     		str	r0, [r3, #4]
  78:Core/Src/uart.c ****     while(!(USART1->SR & (1 << 6))); // Wait for TC to SET
 333              		.loc 1 78 5 is_stmt 1 view .LVU86
 334              	.L22:
ARM GAS  /tmp/ccTY5xJa.s 			page 8


 335              		.loc 1 78 11 discriminator 1 view .LVU87
 336              		.loc 1 78 19 is_stmt 0 discriminator 1 view .LVU88
 337 000e 034B     		ldr	r3, .L23
 338 0010 1B68     		ldr	r3, [r3]
 339              		.loc 1 78 11 discriminator 1 view .LVU89
 340 0012 13F0400F 		tst	r3, #64
 341 0016 FAD0     		beq	.L22
  79:Core/Src/uart.c **** }
 342              		.loc 1 79 1 view .LVU90
 343 0018 7047     		bx	lr
 344              	.L24:
 345 001a 00BF     		.align	2
 346              	.L23:
 347 001c 00100140 		.word	1073811456
 348              		.cfi_endproc
 349              	.LFE140:
 351              		.section	.text.USART1_SendString,"ax",%progbits
 352              		.align	1
 353              		.global	USART1_SendString
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	USART1_SendString:
 359              	.LVL2:
 360              	.LFB141:
  80:Core/Src/uart.c **** 
  81:Core/Src/uart.c **** /*
  82:Core/Src/uart.c **** USART1_SendString():
  83:Core/Src/uart.c ****     Transmits string over UART
  84:Core/Src/uart.c **** */
  85:Core/Src/uart.c **** void USART1_SendString(char *str){
 361              		.loc 1 85 34 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		.loc 1 85 34 is_stmt 0 view .LVU92
 366 0000 10B5     		push	{r4, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 4, -8
 369              		.cfi_offset 14, -4
 370 0002 0446     		mov	r4, r0
  86:Core/Src/uart.c ****     while(*str){
 371              		.loc 1 86 5 is_stmt 1 view .LVU93
 372              		.loc 1 86 10 is_stmt 0 view .LVU94
 373 0004 02E0     		b	.L26
 374              	.LVL3:
 375              	.L27:
  87:Core/Src/uart.c ****         USART1_SendChar(*str++);
 376              		.loc 1 87 9 is_stmt 1 view .LVU95
 377              		.loc 1 87 29 is_stmt 0 view .LVU96
 378 0006 0134     		adds	r4, r4, #1
 379              	.LVL4:
 380              		.loc 1 87 9 view .LVU97
 381 0008 FFF7FEFF 		bl	USART1_SendChar
 382              	.LVL5:
 383              	.L26:
  86:Core/Src/uart.c ****     while(*str){
ARM GAS  /tmp/ccTY5xJa.s 			page 9


 384              		.loc 1 86 11 is_stmt 1 view .LVU98
 385 000c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 386 000e 0028     		cmp	r0, #0
 387 0010 F9D1     		bne	.L27
  88:Core/Src/uart.c ****     }
  89:Core/Src/uart.c **** }
 388              		.loc 1 89 1 is_stmt 0 view .LVU99
 389 0012 10BD     		pop	{r4, pc}
 390              		.loc 1 89 1 view .LVU100
 391              		.cfi_endproc
 392              	.LFE141:
 394              		.section	.text.USART1_ReceiveChar,"ax",%progbits
 395              		.align	1
 396              		.global	USART1_ReceiveChar
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 401              	USART1_ReceiveChar:
 402              	.LFB142:
  90:Core/Src/uart.c **** 
  91:Core/Src/uart.c **** /*
  92:Core/Src/uart.c **** USART1_ReceiveChar():
  93:Core/Src/uart.c ****     Receives character over UART
  94:Core/Src/uart.c **** */
  95:Core/Src/uart.c **** uint8_t USART1_ReceiveChar(){
 403              		.loc 1 95 29 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408              	.L30:
  96:Core/Src/uart.c ****     while(!(USART1->SR & (1 << 5))); // wait for received data
 409              		.loc 1 96 11 discriminator 1 view .LVU102
 410              		.loc 1 96 19 is_stmt 0 discriminator 1 view .LVU103
 411 0000 044B     		ldr	r3, .L31
 412 0002 1B68     		ldr	r3, [r3]
 413              		.loc 1 96 11 discriminator 1 view .LVU104
 414 0004 13F0200F 		tst	r3, #32
 415 0008 FAD0     		beq	.L30
  97:Core/Src/uart.c ****     uint8_t data = USART1->DR; // read data
 416              		.loc 1 97 5 is_stmt 1 view .LVU105
 417              		.loc 1 97 26 is_stmt 0 view .LVU106
 418 000a 024B     		ldr	r3, .L31
 419 000c 5868     		ldr	r0, [r3, #4]
 420              	.LVL6:
  98:Core/Src/uart.c ****     return data;
 421              		.loc 1 98 5 is_stmt 1 view .LVU107
  99:Core/Src/uart.c **** }
 422              		.loc 1 99 1 is_stmt 0 view .LVU108
 423 000e C0B2     		uxtb	r0, r0
 424              		.loc 1 99 1 view .LVU109
 425 0010 7047     		bx	lr
 426              	.L32:
 427 0012 00BF     		.align	2
 428              	.L31:
 429 0014 00100140 		.word	1073811456
 430              		.cfi_endproc
ARM GAS  /tmp/ccTY5xJa.s 			page 10


 431              	.LFE142:
 433              		.text
 434              	.Letext0:
 435              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 436              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 437              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
ARM GAS  /tmp/ccTY5xJa.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
     /tmp/ccTY5xJa.s:21     .text.Delay_ms:00000000 $t
     /tmp/ccTY5xJa.s:27     .text.Delay_ms:00000000 Delay_ms
     /tmp/ccTY5xJa.s:67     .text.Clock_Init:00000000 $t
     /tmp/ccTY5xJa.s:73     .text.Clock_Init:00000000 Clock_Init
     /tmp/ccTY5xJa.s:98     .text.Clock_Init:00000014 $d
     /tmp/ccTY5xJa.s:103    .text.GPIO_Init:00000000 $t
     /tmp/ccTY5xJa.s:109    .text.GPIO_Init:00000000 GPIO_Init
     /tmp/ccTY5xJa.s:188    .text.GPIO_Init:0000005c $d
     /tmp/ccTY5xJa.s:193    .text.GPIO_Set_Pin:00000000 $t
     /tmp/ccTY5xJa.s:199    .text.GPIO_Set_Pin:00000000 GPIO_Set_Pin
     /tmp/ccTY5xJa.s:216    .text.GPIO_Set_Pin:00000008 $d
     /tmp/ccTY5xJa.s:221    .text.GPIO_Reset_Pin:00000000 $t
     /tmp/ccTY5xJa.s:227    .text.GPIO_Reset_Pin:00000000 GPIO_Reset_Pin
     /tmp/ccTY5xJa.s:244    .text.GPIO_Reset_Pin:0000000c $d
     /tmp/ccTY5xJa.s:249    .text.USART_Init:00000000 $t
     /tmp/ccTY5xJa.s:255    .text.USART_Init:00000000 USART_Init
     /tmp/ccTY5xJa.s:302    .text.USART_Init:00000034 $d
     /tmp/ccTY5xJa.s:307    .text.USART1_SendChar:00000000 $t
     /tmp/ccTY5xJa.s:313    .text.USART1_SendChar:00000000 USART1_SendChar
     /tmp/ccTY5xJa.s:347    .text.USART1_SendChar:0000001c $d
     /tmp/ccTY5xJa.s:352    .text.USART1_SendString:00000000 $t
     /tmp/ccTY5xJa.s:358    .text.USART1_SendString:00000000 USART1_SendString
     /tmp/ccTY5xJa.s:395    .text.USART1_ReceiveChar:00000000 $t
     /tmp/ccTY5xJa.s:401    .text.USART1_ReceiveChar:00000000 USART1_ReceiveChar
     /tmp/ccTY5xJa.s:429    .text.USART1_ReceiveChar:00000014 $d

NO UNDEFINED SYMBOLS
