
build/debug/stm32f4_uart.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000013c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000300  08000300  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000300  08000300  00001300  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000304  08000304  00001304  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000004  20000000  08000308  00002000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000020  20000004  0800030c  00002004  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  20000024  0800030c  00002024  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
  9 .comment      0000003c  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY
 10 .debug_info   00001278  00000000  00000000  00002070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000050a  00000000  00000000  000032e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 000001e0  00000000  00000000  000037f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 0000014b  00000000  00000000  000039d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000a12  00000000  00000000  00003b23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00000e8f  00000000  00000000  00004535  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_frame  00000310  00000000  00000000  000053c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 0000021c  00000000  00000000  000056d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000052  00000000  00000000  000058f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000004 	.word	0x20000004
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080002e8 	.word	0x080002e8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000008 	.word	0x20000008
 8000200:	080002e8 	.word	0x080002e8

08000204 <main>:
#include "main.h"


int main(){
  return 0;
 8000204:	2000      	movs	r0, #0
 8000206:	4770      	bx	lr

08000208 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8000208:	4a03      	ldr	r2, [pc, #12]	@ (8000218 <HAL_IncTick+0x10>)
 800020a:	6811      	ldr	r1, [r2, #0]
 800020c:	4b03      	ldr	r3, [pc, #12]	@ (800021c <HAL_IncTick+0x14>)
 800020e:	781b      	ldrb	r3, [r3, #0]
 8000210:	440b      	add	r3, r1
 8000212:	6013      	str	r3, [r2, #0]
}
 8000214:	4770      	bx	lr
 8000216:	bf00      	nop
 8000218:	20000020 	.word	0x20000020
 800021c:	20000000 	.word	0x20000000

08000220 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000220:	e7fe      	b.n	8000220 <NMI_Handler>

08000222 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000222:	e7fe      	b.n	8000222 <HardFault_Handler>

08000224 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000224:	e7fe      	b.n	8000224 <MemManage_Handler>

08000226 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000226:	e7fe      	b.n	8000226 <BusFault_Handler>

08000228 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000228:	e7fe      	b.n	8000228 <UsageFault_Handler>

0800022a <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800022a:	4770      	bx	lr

0800022c <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800022c:	4770      	bx	lr

0800022e <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800022e:	4770      	bx	lr

08000230 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000230:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000232:	f7ff ffe9 	bl	8000208 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000236:	bd08      	pop	{r3, pc}

08000238 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000238:	4a03      	ldr	r2, [pc, #12]	@ (8000248 <SystemInit+0x10>)
 800023a:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 800023e:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000242:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000246:	4770      	bx	lr
 8000248:	e000ed00 	.word	0xe000ed00

0800024c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800024c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000284 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8000250:	f7ff fff2 	bl	8000238 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000254:	480c      	ldr	r0, [pc, #48]	@ (8000288 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000256:	490d      	ldr	r1, [pc, #52]	@ (800028c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000258:	4a0d      	ldr	r2, [pc, #52]	@ (8000290 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800025a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800025c:	e002      	b.n	8000264 <LoopCopyDataInit>

0800025e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800025e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000260:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000262:	3304      	adds	r3, #4

08000264 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000264:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000266:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000268:	d3f9      	bcc.n	800025e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026a:	4a0a      	ldr	r2, [pc, #40]	@ (8000294 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800026c:	4c0a      	ldr	r4, [pc, #40]	@ (8000298 <LoopFillZerobss+0x22>)
  movs r3, #0
 800026e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000270:	e001      	b.n	8000276 <LoopFillZerobss>

08000272 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000272:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000274:	3204      	adds	r2, #4

08000276 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000276:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000278:	d3fb      	bcc.n	8000272 <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 800027a:	f000 f811 	bl	80002a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800027e:	f7ff ffc1 	bl	8000204 <main>
  bx  lr    
 8000282:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000284:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000288:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800028c:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000290:	08000308 	.word	0x08000308
  ldr r2, =_sbss
 8000294:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000298:	20000024 	.word	0x20000024

0800029c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800029c:	e7fe      	b.n	800029c <ADC_IRQHandler>
	...

080002a0 <__libc_init_array>:
 80002a0:	b570      	push	{r4, r5, r6, lr}
 80002a2:	4b0d      	ldr	r3, [pc, #52]	@ (80002d8 <__libc_init_array+0x38>)
 80002a4:	4d0d      	ldr	r5, [pc, #52]	@ (80002dc <__libc_init_array+0x3c>)
 80002a6:	1b5b      	subs	r3, r3, r5
 80002a8:	109c      	asrs	r4, r3, #2
 80002aa:	2600      	movs	r6, #0
 80002ac:	42a6      	cmp	r6, r4
 80002ae:	d109      	bne.n	80002c4 <__libc_init_array+0x24>
 80002b0:	f000 f81a 	bl	80002e8 <_init>
 80002b4:	4d0a      	ldr	r5, [pc, #40]	@ (80002e0 <__libc_init_array+0x40>)
 80002b6:	4b0b      	ldr	r3, [pc, #44]	@ (80002e4 <__libc_init_array+0x44>)
 80002b8:	1b5b      	subs	r3, r3, r5
 80002ba:	109c      	asrs	r4, r3, #2
 80002bc:	2600      	movs	r6, #0
 80002be:	42a6      	cmp	r6, r4
 80002c0:	d105      	bne.n	80002ce <__libc_init_array+0x2e>
 80002c2:	bd70      	pop	{r4, r5, r6, pc}
 80002c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c8:	4798      	blx	r3
 80002ca:	3601      	adds	r6, #1
 80002cc:	e7ee      	b.n	80002ac <__libc_init_array+0xc>
 80002ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d2:	4798      	blx	r3
 80002d4:	3601      	adds	r6, #1
 80002d6:	e7f2      	b.n	80002be <__libc_init_array+0x1e>
 80002d8:	08000300 	.word	0x08000300
 80002dc:	08000300 	.word	0x08000300
 80002e0:	08000300 	.word	0x08000300
 80002e4:	08000304 	.word	0x08000304

080002e8 <_init>:
 80002e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ea:	bf00      	nop
 80002ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ee:	bc08      	pop	{r3}
 80002f0:	469e      	mov	lr, r3
 80002f2:	4770      	bx	lr

080002f4 <_fini>:
 80002f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f6:	bf00      	nop
 80002f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fa:	bc08      	pop	{r3}
 80002fc:	469e      	mov	lr, r3
 80002fe:	4770      	bx	lr
